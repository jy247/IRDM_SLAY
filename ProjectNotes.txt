Project notes

literature review * 4

implemented in python,
web front end?
UCL Slay (Schukit, Lee, Anand, Youldon)

Flow:

Search terms -> pre-process -> reverse dictionary -> ranking model -> results.

Page Rank
--Ruben 
-web crawler? Scrapy?
-restricted to ucl domain or not?
-how to save/store the model
-graph for pagerank, adjacency matrix -> pagerank
-pre-canned pageranks.
dictionary of URL -> importance (normalised)
database of URL -> content (header / body)

--Jack
pre-process search terms
stop-words, synonyms, spelling mistakes
reverse index:
bag of words, bi-gram, n-gram, language model, query document vector similarity
data-structure
save/store
meta-tags, title?

--Manu
Start by evaluating google / UCL Internal search
Evaluation metrics - precision / recall, precision at 10, average precision, navigational search.  
Test queries with specified results
Automate some of the ranking?
Front-end?

Suggestions for eval:

search terms 'jun wang', 'data mining professor', 'jun wang phd opportunities'
http://www.cs.ucl.ac.uk/cs_people/J.Wang.html/
http://web4.cs.ucl.ac.uk/staff/jun.wang/blog/
http://web4.cs.ucl.ac.uk/staff/jun.wang/blog/prospective-students/

search terms 'information security', 'web security', 'cyber security', 'study information security', 'masters computer science security'
http://sec.cs.ucl.ac.uk/home/
http://sec.cs.ucl.ac.uk/ace_csr/
http://www.cs.ucl.ac.uk/admissions/msc_isec/


not possible to crawl to results returned by an internal search engine
online learning?
feed back tweaks into pagerank?

